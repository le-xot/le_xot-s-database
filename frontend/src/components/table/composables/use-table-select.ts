import { GenresEnum, GradeEnum, StatusesEnum } from '@/lib/api.ts'
import { NText } from 'naive-ui'
import { SelectBaseOption } from 'naive-ui/es/select/src/interface'
import { acceptHMRUpdate, defineStore } from 'pinia'
import { h } from 'vue'

export interface TagOptions {
  name: string
  label?: string
  description?: string
  variant: 'default' | 'error' | 'primary' | 'info' | 'success' | 'warning'
}

export type SelectKind = 'genre' | 'status' | 'grade'

type StatusesOptions = SelectBaseOption<StatusesEnum>
type GradesOptions = SelectBaseOption<GradeEnum>
type GenresOptions = SelectBaseOption<GenresEnum>

export const statusTags: Record<
  StatusesEnum,
  TagOptions
> = {
  [StatusesEnum.QUEUE]: {
    name: '–í –æ—á–µ—Ä–µ–¥–∏',
    description: '–∑–∞–∫–∞–∑ –∂–¥—ë—Ç —Å–≤–æ–µ–≥–æ —á–∞—Å–∞.',
    variant: 'default',
  },
  [StatusesEnum.UNFINISHED]: {
    name: '–ù–µ—Ç –∫–æ–Ω—Ü–æ–≤–∫–∏',
    description: '–∏–≥—Ä–∞ –Ω–µ –∏–º–µ–µ—Ç –∫–æ–Ω—Ü–æ–≤–∫–∏ (—Ç–∏—Ç—Ä–æ–≤ –∏–ª–∏ –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å—é–∂–µ—Ç–∞).',
    variant: 'info',
  },
  [StatusesEnum.DONE]: {
    name: '–ì–æ—Ç–æ–≤–æ',
    description: '–∏–≥—Ä–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, –∫–∏–Ω–æ–ª–µ–Ω—Ç–∞ –ø–æ—Å–º–æ—Ç—Ä–µ–Ω–∞.',
    variant: 'success',
  },
  [StatusesEnum.PROGRESS]: {
    name: '–í –ø—Ä–æ—Ü–µ—Å—Å–µ',
    description: '–∑–∞–∫–∞–∑ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å—Ç–∞–¥–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.',
    variant: 'warning',
  },
  [StatusesEnum.DROP]: {
    name: '–î—Ä–æ–ø',
    description: '–∑–∞–∫–∞–∑ –Ω–µ –±—É–¥–µ—Ç –∑–∞–∫–æ–Ω—á–µ–Ω –¥–æ –∫–æ–Ω—Ü–∞.',
    variant: 'error',
  },
}

export const genreTags: Record<
  GenresEnum,
  TagOptions
> = {
  [GenresEnum.MOVIE]: { name: '–§–∏–ª—å–º', variant: 'success' },
  [GenresEnum.SERIES]: { name: '–°–µ—Ä–∏–∞–ª', variant: 'info' },
  [GenresEnum.ANIME]: { name: '–ê–Ω–∏–º–µ', variant: 'error' },
  [GenresEnum.CARTOON]: { name: '–ú—É–ª—å—Ç—Ñ–∏–ª—å–º', variant: 'warning' },
}

export const gradeTags: Record<
  GradeEnum,
  TagOptions
> = {
  [GradeEnum.RECOMMEND]: {
    name: 'üî•',
    label: '–†–µ–∫–æ–º–µ–Ω–¥—É—é',
    description: '–Ω–∞–¥–µ—é—Å—å, —á—Ç–æ —ç—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è –≤—Å–µ–º. –ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–∞—Å–ª—É–∂–∏–≤–∞—é—â–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è.',
    variant: 'info',
  },
  [GradeEnum.LIKE]: {
    name: 'üëç',
    label: '–ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å',
    description: '–º–Ω–µ, –Ω–æ –º–æ–∂–µ—Ç –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è –≤–∞–º. –ë–æ–ª—å—à–µ –≤–∫—É—Å–æ–≤—â–∏–Ω–∞.',
    variant: 'success',
  },
  [GradeEnum.BEER]: {
    name: 'üç∫',
    label: '–ü–æ–¥ –ø–∏–≤–∫–æ',
    description: '–ø–æ–π–¥—ë—Ç. –ë–æ–ª—å—à–µ —á–µ–º –Ω–∞ –æ–¥–∏–Ω —Ä–∞–∑–æ—á–µ–∫ –Ω–µ —Ç—è–Ω–µ—Ç, –∫–∞–∫ –Ω–µ —Å—Ç–∞—Ä–∞–π—Å—è.',
    variant: 'warning',
  },
  [GradeEnum.DISLIKE]: {
    name: 'üëé',
    label: '–ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é',
    description: '–∏ —Å—á–∏—Ç–∞—é —ç—Ç–æ –ø—É—Å—Ç–æ–π —Ç—Ä–∞—Ç–æ–π –≤—Ä–µ–º–µ–Ω–∏ –∏ –Ω–µ–¥–æ—Å—Ç–æ–π–Ω—ã–º –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ–º –¥–æ—Å—É–≥–∞.',
    variant: 'error',
  },
}

export const useTableSelect = defineStore('use-table-select', () => {
  const tags: Record<SelectKind, Record<string, TagOptions>> = {
    status: statusTags,
    genre: genreTags,
    grade: gradeTags,
  }

  const options: Record<SelectKind, SelectBaseOption[]> = {
    status: Object.entries(statusTags).map(([key, value]) => {
      return {
        label: value.name,
        value: key,
      }
    }),
    genre: Object.entries(genreTags).map(([key, value]) => {
      return {
        label: value.name,
        value: key,
      }
    }),
    grade: Object.entries(gradeTags).map(([key, value]) => {
      return {
        label: `${value.name} ${value.label}`,
        value: key,
      }
    }),
  }

  function renderLabel(
    option: StatusesOptions | GenresOptions | GradesOptions,
    kind: SelectKind,
  ) {
    if (!option.value) return
    return h(NText, {
      style: 'align-items: center',
      type: tags[kind][option.value].variant,
    }, { default: () => option.label })
  }

  return {
    gradeTags,
    statusTags,
    genreTags,
    options,
    renderLabel,
  }
})

if (import.meta.hot) {
  import.meta.hot.accept(acceptHMRUpdate(useTableSelect, import.meta.hot))
}
